{"remainingRequest":"/Users/juhongchul/Desktop/개발/MEVN/4장/sensor/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/juhongchul/Desktop/개발/MEVN/4장/sensor/src/views/Number.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/juhongchul/Desktop/개발/MEVN/4장/sensor/src/views/Number.vue","mtime":1566693104534},{"path":"/Users/juhongchul/Desktop/개발/MEVN/4장/sensor/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/juhongchul/Desktop/개발/MEVN/4장/sensor/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/juhongchul/Desktop/개발/MEVN/4장/sensor/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/juhongchul/Desktop/개발/MEVN/4장/sensor/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nimport ioClient from 'socket.io-client' \n  import * as d3 from 'd3';    \n  export default {\n    name: 'HelloWorld3',\n    data() {\n      return { \n      }\n    },\n    mounted() {\n      this.showCircle();  \n    },\n    methods: {\n      showCircle() {  \n        const width = 500 - 20;\n        const height = 600 - 20; \n        const radius = Math.min(width, height) / 3;    \n        const format = d3.format(\".0%\");  \n        const group = d3.select(\"svg\")\n          .attr(\"width\", width)\n          .attr(\"height\", height)\n          .append(\"g\")\n          .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n        const textDOM = group.append(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"dy\", \".3em\");\n          \n        const arc = d3.arc()\n          .innerRadius(radius * 0.7)\n          .outerRadius(radius); \n        const pieGenerator = d3.pie().sort(null)\n        const background = group.append(\"path\")\n          .data(pieGenerator([1])) \n          .attr(\"class\", \"backColor\") \n          .attr(\"d\", arc)\n\n        const foreground = group.append(\"path\")\n          .data(pieGenerator([0, 100])) \n          .attr(\"class\", (d, i) =>`frontColor${i}`) \n          .attr(\"d\", arc)\n \n\n        function arcTween(pie){\n          return function(d){ \n            const interpolate  = d3.interpolate(pie[0].startAngle,pie[0].endAngle);\n            const interpolateText  = d3.interpolate(0,pie[0].value); \n            return function(t){\n              d.endAngle = interpolate(t);\n              textDOM.text(format(interpolateText(t) / 100));\n              return arc(d);\n            }\n          } \n        }   \n        foreground.transition().duration(1500).attrTween(\"d\", arcTween(pieGenerator([80, 20]))).delay(1000)\n      }\n    }\n  }\n\n",{"version":3,"sources":["Number.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Number.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"Number card\"> \n    <svg></svg> \n  </div>\n</template>\n\n<script>import ioClient from 'socket.io-client' \n  import * as d3 from 'd3';    \n  export default {\n    name: 'HelloWorld3',\n    data() {\n      return { \n      }\n    },\n    mounted() {\n      this.showCircle();  \n    },\n    methods: {\n      showCircle() {  \n        const width = 500 - 20;\n        const height = 600 - 20; \n        const radius = Math.min(width, height) / 3;    \n        const format = d3.format(\".0%\");  \n        const group = d3.select(\"svg\")\n          .attr(\"width\", width)\n          .attr(\"height\", height)\n          .append(\"g\")\n          .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n        const textDOM = group.append(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"dy\", \".3em\");\n          \n        const arc = d3.arc()\n          .innerRadius(radius * 0.7)\n          .outerRadius(radius); \n        const pieGenerator = d3.pie().sort(null)\n        const background = group.append(\"path\")\n          .data(pieGenerator([1])) \n          .attr(\"class\", \"backColor\") \n          .attr(\"d\", arc)\n\n        const foreground = group.append(\"path\")\n          .data(pieGenerator([0, 100])) \n          .attr(\"class\", (d, i) =>`frontColor${i}`) \n          .attr(\"d\", arc)\n \n\n        function arcTween(pie){\n          return function(d){ \n            const interpolate  = d3.interpolate(pie[0].startAngle,pie[0].endAngle);\n            const interpolateText  = d3.interpolate(0,pie[0].value); \n            return function(t){\n              d.endAngle = interpolate(t);\n              textDOM.text(format(interpolateText(t) / 100));\n              return arc(d);\n            }\n          } \n        }   \n        foreground.transition().duration(1500).attrTween(\"d\", arcTween(pieGenerator([80, 20]))).delay(1000)\n      }\n    }\n  }\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n  .Number path.backColor {\n    fill: #ff9c00;\n  }\n  .Number path.frontColor0 {\n    fill: #545f73;\n  }\n  .Number path.frontColor1 {\n    fill: #ff9c00;\n  }  \n\n  .Number text {\n    font-size: 7em;\n    font-weight: 400;\n    line-height: 16em;\n    fill: black;\n    font-family:오버워치;\n  } \n\n</style>\n"]}]}